{"version":3,"sources":["components/NewTodoForm.js","components/List.js","components/App.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","state","name","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","createTodo","id","completed","onSubmit","this","htmlFor","type","placeholder","onChange","Component","List","isEditing","handleRemove","removeTodo","toggleForm","evt","handleUpdate","console","log","updateTodo","dragging","className","onDragOver","event","bounding","getBoundingClientRect","offsetX","x","width","clientX","style","onDragLeave","onDragStart","dataTransfer","setData","onDrop","insertItem","items","map","item","draggable","onClick","App","idToInsert","after","removed","removedId","newArr","reduce","arr","i","toString","push","length","create","newTodo","remove","filter","todo","handleToggle","toggleTodo","update","updatedTask","updatedTodos","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a169cc0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./NewTodoForm.css\";\n\nclass NewTodoForm extends Component {\n  state = { name: \"\" };\n  handleChange=(e)=> {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit=(e)=> {\n    e.preventDefault();\n    this.props.createTodo({ ...this.state, id:this.state.name, completed: false });\n    this.setState({ name: \"\" });\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor='name'>Add Todo item</label>\n        <input\n          type='text'\n          placeholder='New Todo'\n          id='name'\n          name='name'\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <button>Add Todo</button>\n      </form>\n    );\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n  state={\r\n    isEditing: false,\r\n    name: this.props.name\r\n}\r\n   handleRemove=(id)=> {\r\n\r\n    this.props.removeTodo(id);\r\n  }\r\n  toggleForm=()=> {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  handleChange=(evt)=> {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  handleUpdate=(evt)=> {\r\n    evt.preventDefault();\r\n    console.log(this.props.id)\r\n    this.props.updateTodo(this.props.id, this.state.name);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  render() {\r\n    let dragging = null;\r\n    let result;\r\n    if(this.state.isEditing){\r\n        result =(\r\n            <div className=\"Todo\" >\r\n                <form onSubmit={this.handleUpdate}>\r\n                    <input type='text'value={this.state.name} onChange={this.handleChange} name=\"name\" />\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n        }else{\r\n          result =<div\r\n          onDragOver={event => {\r\n            event.preventDefault();\r\n            var bounding = event.target.getBoundingClientRect();\r\n            var offsetX = bounding.x + bounding.width / 2;\r\n            if (event.clientX - offsetX > 0) {\r\n              event.target.style[\"border-right\"] = \"solid 4px red\";\r\n              event.target.style[\"border-left\"] = \"\";\r\n            } else {\r\n              event.target.style[\"border-left\"] = \"solid 4px red\";\r\n              event.target.style[\"border-right\"] = \"\";\r\n            }\r\n          }}\r\n          onDragLeave={event => {\r\n            event.target.style[\"border-right\"] = \"\";\r\n            event.target.style[\"border-left\"] = \"\";\r\n          }}\r\n          onDragStart={event => {\r\n            dragging = event.target;\r\n            console.log(event.target);\r\n            event.dataTransfer.setData(\"text/html\", dragging);\r\n          }}\r\n          onDrop={event => {\r\n            event.preventDefault();\r\n    \r\n            if (event.target.style[\"border-right\"] !== \"\") {\r\n              event.target.style[\"border-right\"] = \"\";\r\n              this.props.insertItem(event.target.id, dragging.id, true);\r\n            } else {\r\n              event.target.style[\"border-left\"] = \"\";\r\n              this.props.insertItem(event.target.id, dragging.id, false);\r\n            }\r\n          }}\r\n          \r\n          className=\"list\"\r\n        >\r\n            \r\n          {this.props.items.map(item => (\r\n            <div draggable\r\n             id={item.id} \r\n             key={item.id}\r\n             name={item.name}\r\n              className=\"item\">\r\n              {item.name}\r\n              <button onClick={this.toggleForm}> Edit</button>\r\n              <button onClick={()=>this.handleRemove(item.id)}>X</button>\r\n            </div>\r\n          ))}\r\n        </div>;\r\n        }\r\n    return result;\r\n  }\r\n}\r\n\r\n// const List = ({ items, ...props }) => {\r\n  \r\n  \r\n    \r\n    \r\n//   return (\r\n      \r\n    \r\n//   );\r\n// };\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport '../App.css'\r\n\r\n\r\nimport List from \"./List\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    items: []\r\n  };\r\n\r\n  insertItem = (id, idToInsert, after) => {\r\n    if (id !== idToInsert) {\r\n      let removed = null;\r\n      let removedId = null;\r\n\r\n      let newArr = this.state.items.reduce((arr, i) => {\r\n        if (i.id.toString() === idToInsert) {\r\n          removed = i;\r\n          return arr;\r\n        }\r\n        if (i.id.toString() === id) {\r\n          if (after) {\r\n            arr.push(i);\r\n            arr.push(null);\r\n            removedId = arr.length - 1;\r\n          } else {\r\n            arr.push(null);\r\n            removedId = arr.length - 1;\r\n            arr.push(i);\r\n          }\r\n        } else {\r\n          arr.push(i);\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      newArr[removedId] = removed;\r\n\r\n      this.setState({\r\n        items: newArr\r\n      });\r\n    }\r\n  };\r\n  create =(newTodo)=>{\r\n    this.setState({\r\n        items: [...this.state.items, newTodo]\r\n    })\r\n}\r\n remove =(id)=>{\r\n  this.setState({\r\n     items:this.state.items.filter(todo => todo.id !==id) \r\n  })\r\n}\r\nhandleToggle=(evt)=> {\r\n  this.props.toggleTodo(this.props.id);\r\n}\r\nupdate =(id, updatedTask) =>{\r\n  const updatedTodos = this.state.items.map(todo => {\r\n    if (todo.id === id) {\r\n      return { ...todo, name: updatedTask };\r\n    }\r\n    return todo;\r\n  });\r\n  this.setState({ items: updatedTodos });\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> React Drag & Drop Todo App </h1>\r\n        <NewTodoForm createTodo ={this.create} />\r\n        <List \r\n        insertItem={this.insertItem}\r\n        id={this.state.items.name}\r\n        removeTodo={this.remove}\r\n        items={this.state.items} \r\n        updateTodo={this.update}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MyApp  from './components/App'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MyApp />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./components/styles.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}