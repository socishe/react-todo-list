{"version":3,"sources":["components/NewTodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","state","task","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","createTodo","id","completed","onSubmit","this","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","removeTodo","toggleForm","handleUpdate","evt","updateTodo","handleToggle","toggleTodo","onClick","TodoList","todos","create","newTodo","remove","filter","todo","update","updatedTask","updatedTodos","map","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c58df975.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import uuid from \"uuid/v4\";\nimport \"./NewTodoForm.css\";\n\nclass NewTodoForm extends Component {\n  state = { task: \"\" };\n  handleChange=(e)=> {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit=(e)=> {\n    e.preventDefault();\n    this.props.createTodo({ ...this.state, id:this.state.task, completed: false });\n    this.setState({ task: \"\" });\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor='task'>New Todo</label>\n        <input\n          type='text'\n          placeholder='New Todo'\n          id='task'\n          name='task'\n          value={this.state.task}\n          onChange={this.handleChange}\n        />\n        <button>Add Todo</button>\n      </form>\n    );\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\r\nclass Todo extends Component {\r\n  state={\r\n      isEditing: false,\r\n      task: this.props.task\r\n  }\r\n  handleRemove=()=> {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n  toggleForm=()=> {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  handleUpdate=(evt)=> {\r\n    evt.preventDefault();\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  handleChange=(evt)=> {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  handleToggle=(evt)=> {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n  render() {\r\n  let result;\r\n  if(this.state.isEditing){\r\n      result =(\r\n          <div >\r\n              <form onSubmit={this.handleUpdate}>\r\n                  <input type='text'value={this.state.task} onChange={this.handleChange} name=\"task\" />\r\n                  <button>Save</button>\r\n              </form>\r\n          </div>\r\n      )\r\n  }else{\r\n      result = (\r\n        <div >\r\n        <button onClick={this.toggleForm}>Edit</button>\r\n        <button onClick={this.handleRemove}>X</button>\r\n        <li>{this.props.task}</li>\r\n    </div>\r\n      )\r\n  }\r\n  \r\n    return result; \r\n  }\r\n}\r\nexport default Todo;\r\n","import React, { Component } from 'react'\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport './TodoList.css'\r\nclass TodoList extends Component {\r\n    state ={\r\n        todos: []\r\n    }\r\n    create =(newTodo)=>{\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        })\r\n    }\r\n    remove =(id)=>{\r\n        this.setState({\r\n           todos:this.state.todos.filter(todo => todo.id !==id) \r\n        })\r\n    }\r\n    update=(id, updatedTask)=> {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n          if (todo.id === id) {\r\n            return { ...todo, task: updatedTask };\r\n          }\r\n          return todo;\r\n        });\r\n        this.setState({ todos: updatedTodos });\r\n      }\r\n    render() {\r\n        const todos = this.state.todos.map(todo=>{\r\n            return <Todo \r\n            removeTodo={this.remove}\r\n             id={todo.id}\r\n              key={todo.id}\r\n              task={todo.task} \r\n              updateTodo={this.update} />\r\n        })\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1>Todo List</h1>\r\n                <NewTodoForm createTodo ={this.create}/>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React, { Component } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}