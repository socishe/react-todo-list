{"version":3,"sources":["components/NewTodoForm.js","components/TodoItem.js","components/List.js","components/App.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","state","name","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","createTodo","id","items","length","completed","className","onSubmit","this","htmlFor","type","placeholder","onChange","Component","dragging","TodoItem","item","onRemove","onUpdate","onDragMove","useState","isEditing","setIsEditing","inputValue","setInputValue","evt","defaultValue","onDragOver","event","bounding","getBoundingClientRect","offsetX","x","width","clientX","style","onDragLeave","onDragStart","draggingTarget","dataTransfer","setData","onDrop","onRight","draggable","onClick","List","handleRemove","removeTodo","handleUpdate","itemId","updateTodo","targetId","dragId","insertItem","map","index","toString","App","idToInsert","after","removed","removedId","newArr","reduce","arr","i","push","create","newTodo","remove","filter","todo","handleToggle","toggleTodo","update","updatedTask","updatedTodos","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c14f3957.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./NewTodoForm.css\";\r\n\r\nclass NewTodoForm extends Component {\r\n  state = { name: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.createTodo({\r\n      ...this.state,\r\n      id: `${this.state.name}_${this.props.items.length}`,\r\n      completed: false,\r\n    });\r\n\r\n    this.setState({ name: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NewTodoForm\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">Add Todo Item</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New Todo\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Add Todo</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NewTodoForm;\r\n","import React, { useState } from \"react\";\r\n\r\nlet dragging = null;\r\n\r\nconst TodoItem = ({ item, onRemove, onUpdate, onDragMove }) => {\r\n  //   const dragging = useRef(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n\r\n    const bounding = event.target.getBoundingClientRect();\r\n    const offsetX = bounding.x + bounding.width / 2;\r\n\r\n    if (event.clientX - offsetX > 0) {\r\n      event.target.style[\"border-right\"] = \"solid 4px red\";\r\n      event.target.style[\"border-left\"] = \"\";\r\n    } else {\r\n      event.target.style[\"border-left\"] = \"solid 4px red\";\r\n      event.target.style[\"border-right\"] = \"\";\r\n    }\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    let onRight = false;\r\n\r\n    if (event.target.style[\"border-right\"] !== \"\") {\r\n      event.target.style[\"border-right\"] = \"\";\r\n      onRight = true;\r\n    } else {\r\n      event.target.style[\"border-left\"] = \"\";\r\n    }\r\n\r\n    if (dragging && dragging.id) {\r\n      onDragMove(event.target.id, dragging.id, onRight);\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    setInputValue(evt.target.value);\r\n  };\r\n\r\n  const handleUpdate = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    onUpdate(item.id, inputValue);\r\n\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isEditing && (\r\n        <div className=\"Todo\">\r\n          <div className=\"item\">\r\n            <form onSubmit={handleUpdate}>\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={item ? item.name : \"\"}\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n              />\r\n              <button type=\"submit\">Save</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!isEditing && (\r\n        <div\r\n          onDragOver={onDragOver}\r\n          onDragLeave={(event) => {\r\n            event.target.style[\"border-right\"] = \"\";\r\n            event.target.style[\"border-left\"] = \"\";\r\n          }}\r\n          onDragStart={(event) => {\r\n            const draggingTarget = event.target;\r\n            dragging = draggingTarget;\r\n\r\n            event.dataTransfer.setData(\"text/html\", dragging);\r\n          }}\r\n          onDrop={onDrop}\r\n        >\r\n          <div draggable className=\"item\" id={item.id}>\r\n            {item.name}\r\n            <div>\r\n              <button onClick={toggleForm}> Edit</button>\r\n              <button className=\"remove\" onClick={() => onRemove(item.id)}>\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass List extends Component {\r\n  state = {};\r\n\r\n  handleRemove = (id) => {\r\n    this.props.removeTodo(id);\r\n  };\r\n\r\n  handleUpdate = (itemId, inputValue) => {\r\n    this.props.updateTodo(itemId, inputValue);\r\n  };\r\n\r\n  onDragMove = (targetId, dragId, onRight) => {\r\n    this.props.insertItem(targetId, dragId, onRight);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.items.map((item, index) => {\r\n          return (\r\n            <TodoItem\r\n              key={`${item.id}_${index.toString()}`}\r\n              item={item}\r\n              onUpdate={this.handleUpdate}\r\n              onDragMove={this.onDragMove}\r\n              onRemove={this.handleRemove}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport \"../App.css\";\r\n\r\nimport List from \"./List\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    items: [],\r\n  };\r\n\r\n  insertItem = (id, idToInsert, after) => {\r\n    if (id !== idToInsert) {\r\n      let removed = null;\r\n      let removedId = null;\r\n\r\n      let newArr = this.state.items.reduce((arr, i) => {\r\n        if (i.id.toString() === idToInsert) {\r\n          removed = i;\r\n          return arr;\r\n        }\r\n\r\n        if (i.id.toString() === id) {\r\n          if (after) {\r\n            arr.push(i);\r\n            arr.push(null);\r\n            removedId = arr.length - 1;\r\n          } else {\r\n            arr.push(null);\r\n            removedId = arr.length - 1;\r\n            arr.push(i);\r\n          }\r\n        } else {\r\n          arr.push(i);\r\n        }\r\n\r\n        return arr;\r\n      }, []);\r\n\r\n      newArr[removedId] = removed;\r\n\r\n      this.setState({\r\n        items: newArr,\r\n      });\r\n    }\r\n  };\r\n\r\n  create = (newTodo) => {\r\n    this.setState({\r\n      items: [...this.state.items, newTodo],\r\n    });\r\n  };\r\n\r\n  remove = (id) => {\r\n    this.setState({\r\n      items: this.state.items.filter((todo) => todo.id !== id),\r\n    });\r\n  };\r\n\r\n  handleToggle = (evt) => {\r\n    this.props.toggleTodo(this.props.id);\r\n  };\r\n\r\n  update = (id, updatedTask) => {\r\n    const updatedTodos = this.state.items.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, name: updatedTask };\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    this.setState({ items: updatedTodos });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> React Drag & Drop Todo App </h1>\r\n        <NewTodoForm items={this.state.items} createTodo={this.create} />\r\n        <List\r\n          insertItem={this.insertItem}\r\n          removeTodo={this.remove}\r\n          items={this.state.items}\r\n          updateTodo={this.update}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport MyApp  from './components/App'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyApp />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"./components/styles.css\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}